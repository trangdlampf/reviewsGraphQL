{"version":3,"sources":["pages/Homepage.js","pages/ReviewDetails.js","pages/Category.js","components/SiteHeader.js","App.js","index.js"],"names":["REVIEWS","gql","Homepage","useQuery","loading","error","data","console","log","reviews","map","review","className","rating","title","body","substring","to","id","REVIEW","ReviewDetails","useParams","variables","Category","SiteHeader","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAKMA,EAAUC,YAAH,mIAWE,SAASC,IAEtB,MAAiCC,YAASH,GAAlCI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAExB,OAAIF,EAAgB,2CAChBC,EAAc,0CAElBE,QAAQC,IAAIF,GAGV,8BACGA,EAAKG,QAAQC,KAAI,SAAAC,GAAM,OACtB,sBAAqBC,UAAU,cAA/B,UACE,qBAAKA,UAAU,SAAf,SAAyBD,EAAOE,SAChC,6BAAKF,EAAOG,QAEZ,iDAEA,8BAAIH,EAAOI,KAAKC,UAAU,EAAG,KAA7B,SACA,cAAC,IAAD,CAAMC,GAAE,mBAAcN,EAAOO,IAA7B,yBAPQP,EAAOO,UCvBzB,IAAMC,EAASlB,YAAH,kJAWG,SAASmB,IACtB,IAAQF,EAAOG,cAAPH,GAER,EAAiCf,YAASgB,EAAQ,CAChDG,UAAW,CAAEJ,GAAIA,KADXd,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAIxB,OAAIF,EAAgB,2CAChBC,EAAc,0CAElBE,QAAQC,IAAIF,GAGV,sBAAKM,UAAU,cAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBN,EAAKK,OAAOE,SACrC,6BAAKP,EAAKK,OAAOG,QAEjB,iDAEA,4BAAIR,EAAKK,OAAOI,WCjCP,SAASQ,IACtB,OACE,2CCDW,SAASC,IACtB,OACE,qBAAKZ,UAAU,cAAf,SACE,cAAC,IAAD,CAAMK,GAAG,IAAT,SAAa,gDCInB,IAAMQ,EAAS,IAAIC,IAAa,CAC9BC,IAAK,gCACLC,MAAO,IAAIC,MA0BEC,MAvBf,WACE,OACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAgBN,OAASA,EAAzB,SACE,sBAAKb,UAAU,MAAf,UACE,cAACY,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC/B,EAAD,MAEF,cAAC,IAAD,CAAO+B,KAAK,eAAZ,SACE,cAACb,EAAD,MAEF,cAAC,IAAD,CAAOa,KAAK,gBAAZ,SACE,cAACV,EAAD,iBCxBdW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83041172.chunk.js","sourcesContent":["import React from 'react'\n// import useFetch from '../hooks/useFetch'\nimport { Link } from 'react-router-dom'\nimport { useQuery, gql } from '@apollo/client'\n\nconst REVIEWS = gql`\n  query GetReviews {\n    reviews {\n      title,\n      body,\n      rating,\n      id\n    }\n  }  \n`\n\nexport default function Homepage() {\n  // const { loading, error, data } = useFetch('http://localhost:1337/reviews')\n  const { loading, error, data } = useQuery(REVIEWS)\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  console.log(data)\n\n  return (\n    <div>\n      {data.reviews.map(review => (\n        <div key={review.id} className=\"review-card\">\n          <div className=\"rating\">{review.rating}</div>\n          <h2>{review.title}</h2>\n          \n          <small>console list</small>\n\n          <p>{review.body.substring(0, 200)}...</p>\n          <Link to={`/details/${review.id}`}>Read more</Link>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\n// import useFetch from '../hooks/useFetch'\nimport { useQuery, gql } from '@apollo/client'\n\nconst REVIEW = gql`\n  query GetReview($id: ID!) {\n    review(id: $id) {\n      title,\n      body,\n      rating,\n      id\n    }\n  }\n`\n\nexport default function ReviewDetails() {\n  const { id } = useParams()\n  // const { loading, error, data } = useFetch('http://localhost:1337/reviews/' + id)\n  const { loading, error, data } = useQuery(REVIEW, {\n    variables: { id: id }  \n  })\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  console.log(data)\n\n  return (\n    <div className=\"review-card\">\n      <div className=\"rating\">{data.review.rating}</div>\n      <h2>{data.review.title}</h2>\n\n      <small>console list</small>\n\n      <p>{data.review.body}</p>\n    </div>\n  )\n}","import React from 'react'\n\nexport default function Category() {\n  return (\n    <div>\n      category\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function SiteHeader() {\n  return (\n    <div className=\"site-header\">\n      <Link to=\"/\"><h1>My Reviews</h1></Link>\n    </div>\n  )\n}\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\n\n// page & layout imports\nimport Homepage from './pages/Homepage'\nimport ReviewDetails from './pages/ReviewDetails'\nimport Category from './pages/Category'\nimport SiteHeader from \"./components/SiteHeader\"\n\n// apollo client\nconst client = new ApolloClient({  \n  uri: 'http://localhost:1337/graphql',\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <Router>\n      <ApolloProvider client={ client }>\n        <div className=\"App\">\n          <SiteHeader />\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route path=\"/details/:id\">\n              <ReviewDetails />\n            </Route>\n            <Route path=\"/category/:id\">\n              <Category />\n            </Route>\n          </Switch>\n        </div>\n      </ApolloProvider>  \n    </Router>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}